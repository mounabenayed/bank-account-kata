US 1:
In order to save money
As a bank client
I want to make a deposit in my account

public void DepositIntoAccount(string accountNumber, float amount){
if(amount<= 0){
throw ;
}
db.accounts.First(x=>x.number == accountNumber).amount += amount ; 
db.operations.add(new opreration(accountNumber, amount, DepositId)) ; 
db.saveChanges();
}


US 2:
In order to retrieve some or all of my savings
As a bank client
I want to make a withdrawal from my account
public void WithdrawalFromAccount(string accountNumber, float amount){
if(amount<= 0){
throw ;
}
var accountSolde = db.accounts.First(x=>x.number == accountNumber).amount;
if(accountSolde < amount)
throw;
db.accounts.First(x=>x.number == accountNumber).amount -= amount ; 
db.operations.add(new opreration(accountNumber, amount, WithdrawalId)) ; 

db.saveChanges();
}


US 3:
In order to check my operations
As a bank client
I want to see the history (operation, date, amount, balance) of my operations

public IEnumerable<Operation> GetAccountHistoy(string accountNumber){
return db.operations.Where(x=>x.AccountNumber == accountNumber)?.Select(x=>new OperationDTO{
OperationType = x.Type.Name,
Date = x.CreationDate,
Amount = x.amount
})
}

public class OperationDTO {
public string OperationType{get; set;} 
public datetime Date{get; set;}
public float Amount{get; set;}
}
